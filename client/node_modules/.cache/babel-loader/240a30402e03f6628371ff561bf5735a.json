{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\rdoug\\\\Planit\\\\client\\\\src\\\\pages\\\\signup.js\";\n//sign up page\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport SignUpBtn from \"../components/SignupBtn\";\nimport API from \"../utils/API\";\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      redirect: false,\n      cookieUsername: \"\",\n      cookieID: \"\"\n    };\n\n    this.handleInputChange = async event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      await this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      API.getUsers().then(response => {\n        for (var i = 0; i < response.data.length; i++) {\n          if (this.state.username === response.data.length) {\n            alert(\"This username already exists.\");\n            this.setState({\n              username: \"\",\n              pword: \"\",\n              redirect: false,\n              cookieUsername: \"\",\n              cookieID: \"\"\n            });\n            return console.log(\"Username already exists\");\n          } else {\n            return API.createUser({\n              name: this.state.name,\n              username: this.state.username,\n              pword: this.state.password\n            }).then(response => {\n              this.setState({\n                redirect: true\n              });\n              alert(this.state.username + \" has been created!\");\n            }).catch(error => console.log(error));\n          }\n        }\n      }).catch(err => console.log(err));\n    };\n  }\n\n  render() {\n    const redirect = this.state.redirect;\n\n    if (redirect) {\n      return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"signupForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"signupName\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"signupUName\",\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"signupPword\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(SignUpBtn, {\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["c:\\Users\\rdoug\\Planit\\client\\src\\pages\\signup.js"],"names":["React","Component","Redirect","SignUpBtn","API","SignUp","state","name","username","password","redirect","cookieUsername","cookieID","handleInputChange","event","target","value","setState","handleFormSubmit","preventDefault","getUsers","then","response","i","data","length","alert","pword","console","log","createUser","catch","error","err","render"],"mappings":"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","sourcesContent":["//sign up page\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport SignUpBtn from \"../components/SignupBtn\"\r\nimport API from \"../utils/API\";\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        name: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        redirect: false,\r\n        cookieUsername: \"\",\r\n        cookieID: \"\"\r\n    };\r\n    handleInputChange = async event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        await this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        API.getUsers()\r\n            .then(response => {\r\n                for (var i = 0; i < response.data.length; i++) {\r\n                    if (this.state.username === response.data.length) {\r\n                        alert(\"This username already exists.\");\r\n                        this.setState({\r\n                            username: \"\",\r\n                            pword: \"\",\r\n                            redirect: false,\r\n                            cookieUsername: \"\",\r\n                            cookieID: \"\"\r\n                        });\r\n                        return console.log(\"Username already exists\");\r\n                    } else {\r\n                        return API.createUser({\r\n                            name: this.state.name,\r\n                            username: this.state.username,\r\n                            pword: this.state.password\r\n                        }).then(response => {\r\n                            this.setState({redirect: true});\r\n                            alert(this.state.username + \" has been created!\");\r\n                        }).catch(error => console.log(error));\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    render() {\r\n        const { redirect } = this.state;\r\n        if (redirect) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <div>\r\n                <form id=\"signupForm\">\r\n                    <input id=\"signupName\" type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.handleInputChange} />\r\n                    <input id=\"signupUName\" type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.handleInputChange} />\r\n                    <input id=\"signupPword\" type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.handleInputChange} />\r\n                    <SignUpBtn onClick={this.handleFormSubmit}></SignUpBtn>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}