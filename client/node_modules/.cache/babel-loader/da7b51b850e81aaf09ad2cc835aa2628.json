{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\rdoug\\\\Planit\\\\client\\\\src\\\\pages\\\\signup.js\";\n//sign up page\nimport React, { Component } from \"react\";\nimport SignUpBtn from \"../components/SignupBtn\";\nimport { withRouter } from \"react-router-dom\"; // import TopInterests from \"../components/TopInterests\";\n// import OtherInterests from \"../components/OtherInterests\";\n\nimport API from \"../utils/API\";\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      username: \"\",\n      password: \"\"\n    };\n\n    this.handleInputChange = async event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      await this.setState({\n        [name]: value\n      });\n      console.log(this.state);\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      let uNameExists = false; // function checking if username exists already - if does prompts for new entry, if not creates new user\n\n      API.getUsers().then(res => {\n        console.log(uNameExists); // console.log(res.data[0].username);\n\n        console.log(this.state.username);\n\n        for (var i = 0; i < res.data.length; i++) {\n          if (res.data[i].username === this.state.username) {\n            uNameExists = true;\n          }\n        }\n\n        uNameExists ? console.log(\"this username already exists\") : console.log(\"create new user\");\n\n        if (!uNameExists) {\n          console.log(this.state);\n          API.createUser({\n            name: this.state.name,\n            username: this.state.username,\n            pword: this.state.password\n          }).then(response => console.log(this.state.username + \" created\")).catch(error => console.log(error));\n        }\n\n        uNameExists ? alert(\"This username already exists. Please choose a different one.\") : alert(\"Welcome, \" + this.state.username + \"!\");\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    console.log('yo');\n    API.getUsers().then(res => console.log(res));\n    API.getPosts().then(res => console.log(res));\n  }\n\n  constuctor() {\n    this.routeChange = this.routeChange.bind(this);\n  }\n\n  routeChange() {\n    let path = \"http://localhost:3000/feed\";\n    this.props.history.push(path);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"signupForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"signupName\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"signupUName\",\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"signupPword\",\n      type: \"text\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(SignUpBtn, {\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.routeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"testButton\")));\n  }\n\n}\n\nexport default withRouter(SignUp);","map":{"version":3,"sources":["c:\\Users\\rdoug\\Planit\\client\\src\\pages\\signup.js"],"names":["React","Component","SignUpBtn","withRouter","API","SignUp","state","name","username","password","handleInputChange","event","target","value","setState","console","log","handleFormSubmit","preventDefault","uNameExists","getUsers","then","res","i","data","length","createUser","pword","response","catch","error","alert","err","componentDidMount","getPosts","constuctor","routeChange","bind","path","props","history","push","render"],"mappings":"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","sourcesContent":["//sign up page\r\nimport React, { Component } from \"react\";\r\nimport SignUpBtn from \"../components/SignupBtn\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import TopInterests from \"../components/TopInterests\";\r\n// import OtherInterests from \"../components/OtherInterests\";\r\nimport API from \"../utils/API\";\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        name: \"\",\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n    componentDidMount() {\r\n        console.log('yo');\r\n        API.getUsers().then((res) => console.log(res));\r\n        API.getPosts().then((res) => console.log(res));\r\n    }\r\n\r\n    constuctor() {\r\n        this.routeChange = this.routeChange.bind(this);\r\n      }\r\n    \r\n      routeChange() {\r\n        let path = \"http://localhost:3000/feed\";\r\n        this.props.history.push(path);\r\n      }\r\n\r\n    handleInputChange = async event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        await this.setState({\r\n            [name]: value\r\n        });\r\n        console.log(this.state);\r\n    }\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        let uNameExists = false;\r\n        // function checking if username exists already - if does prompts for new entry, if not creates new user\r\n        API.getUsers()\r\n            .then(res => {\r\n                console.log(uNameExists);\r\n                // console.log(res.data[0].username);\r\n                console.log(this.state.username);\r\n                for (var i = 0; i < res.data.length; i++) {\r\n                    if (res.data[i].username === this.state.username) {\r\n                        uNameExists = true;\r\n                    }\r\n                }\r\n                uNameExists ? console.log(\"this username already exists\") : console.log(\"create new user\");\r\n                if (!uNameExists) {\r\n                    console.log(this.state)\r\n                    API.createUser({\r\n                        name: this.state.name,\r\n                        username: this.state.username,\r\n                        pword: this.state.password\r\n                    }).then(response => console.log(this.state.username+\" created\")).catch(error => console.log(error));\r\n                }\r\n                uNameExists ? alert(\"This username already exists. Please choose a different one.\") : alert(\"Welcome, \" + this.state.username + \"!\");\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form id=\"signupForm\">\r\n                <input id=\"signupName\" type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.handleInputChange} />\r\n                    <input id=\"signupUName\" type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.handleInputChange} />\r\n                    <input id=\"signupPword\" type=\"text\" name=\"password\" placeholder=\"Password\" onChange={this.handleInputChange} />\r\n                    <SignUpBtn onClick={this.handleFormSubmit} />\r\n                    <button onClick={this.routeChange}>testButton</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUp);"]},"metadata":{},"sourceType":"module"}