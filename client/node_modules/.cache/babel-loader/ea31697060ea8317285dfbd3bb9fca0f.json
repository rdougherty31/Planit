{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rdoug\\\\Planit\\\\client\\\\src\\\\pages\\\\login.js\";\n// login page\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport Cookies from \"js-cookie\";\nimport SignInBtn from \"../components/SigninBtn\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      pword: \"\",\n      redirect: false,\n      cookieUsername: \"\",\n      cookieID: \"\"\n    };\n\n    this.handleInputChange = async event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      await this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      API.getOneUser(this.state.username).then(response => {\n        if (!response) {\n          alert(\"This username does not exist.\");\n          this.setState({\n            username: \"\",\n            pword: \"\",\n            redirect: false,\n            cookieUsername: \"\",\n            cookieID: \"\"\n          });\n        } else {\n          if (response.data.pword !== this.state.pword) {\n            alert(\"Invalid username or password\");\n            this.setState({\n              username: \"\",\n              pword: \"\",\n              redirect: false,\n              cookieUsername: \"\",\n              cookieID: \"\"\n            });\n          } else {\n            this.setState({\n              redirect: true,\n              cookieUsername: JSON.parse(atob(Cookies.get(\"session\"))).username,\n              cookieID: JSON.parse(atob(Cookies.get(\"session\"))).id\n            });\n          }\n        }\n      }).catch(err => {\n        alert(\"Invalid login.\");\n      });\n    };\n  }\n\n  render() {\n    const redirect = this.state.redirect;\n\n    if (redirect) {\n      return React.createElement(Redirect, {\n        to: \"/feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"signinForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"signinUName\",\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"signinPword\",\n      type: \"password\",\n      name: \"pword\",\n      placeholder: \"Password\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(SignInBtn, {\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:\\Users\\rdoug\\Planit\\client\\src\\pages\\login.js"],"names":["React","Component","Redirect","Cookies","SignInBtn","Footer","API","Login","state","username","pword","redirect","cookieUsername","cookieID","handleInputChange","event","name","target","value","setState","handleFormSubmit","preventDefault","getOneUser","then","response","alert","data","JSON","parse","atob","get","id","catch","err","render"],"mappings":"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","sourcesContent":["// login page\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport Cookies from \"js-cookie\";\r\nimport SignInBtn from \"../components/SigninBtn\";\r\nimport Footer from \"../components/Footer\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        username: \"\",\r\n        pword: \"\",\r\n        redirect: false,\r\n        cookieUsername: \"\",\r\n        cookieID: \"\"\r\n    };\r\n\r\n    handleInputChange = async event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        await this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        API.getOneUser(this.state.username)\r\n        .then(response=>{\r\n            if (!response) {\r\n                alert(\"This username does not exist.\");\r\n                this.setState({\r\n                    username: \"\",\r\n                    pword: \"\",\r\n                    redirect: false,\r\n                    cookieUsername: \"\",\r\n                    cookieID: \"\"\r\n                });\r\n            } else\r\n            {\r\n                if (response.data.pword !== this.state.pword) {\r\n                    alert(\"Invalid username or password\");\r\n                    this.setState({\r\n                        username: \"\",\r\n                        pword: \"\",\r\n                        redirect: false,\r\n                        cookieUsername: \"\",\r\n                        cookieID: \"\"\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        redirect: true,\r\n                        cookieUsername: JSON.parse(atob(Cookies.get(\"session\"))).username,\r\n                        cookieID: JSON.parse(atob(Cookies.get(\"session\"))).id\r\n                    });\r\n                }\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            alert(\"Invalid login.\");\r\n        });\r\n    };\r\n    render() {\r\n        const { redirect } = this.state;\r\n        if (redirect) {\r\n            return <Redirect to=\"/feed\" />;\r\n        }\r\n        return (\r\n            <div>\r\n                <form id=\"signinForm\">\r\n                    <input id=\"signinUName\" type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.handleInputChange} />\r\n                    <input id=\"signinPword\" type=\"password\" name=\"pword\" placeholder=\"Password\" onChange={this.handleInputChange} />\r\n                    <SignInBtn onClick={this.handleFormSubmit}></SignInBtn>\r\n                </form>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}