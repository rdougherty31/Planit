{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\rdoug\\\\Planit\\\\client\\\\src\\\\pages\\\\signup.js\";\n//sign up page\nimport React, { Component } from \"react\";\nimport SignUpBtn from \"../components/SignupBtn\";\nimport TopInterests from \"../components/TopInterests\";\nimport OtherInterests from \"../components/OtherInterests\";\nimport API from \"../utils/API\";\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n\n    this.handleInputChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state);\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      let uNameExists = false; // function checking if username exists already - if does prompts for new entry, if not creates new user\n\n      API.getUsers().then(res => {\n        console.log(uNameExists);\n        console.log(res.data[0].username);\n\n        for (var i = 0; i < res.data.length; i++) {\n          if (res.data[i].username === this.state.username) {\n            return uNameExists = true;\n          }\n        }\n      }).then(() => {\n        uNameExists ? console.log(\"this username already exists\") : console.log(\"create new user\");\n        uNameExists ? alert(\"This username already exists. Please choose a different one.\") : alert(\"Welcome, \" + this.state.username + \"!\");\n\n        if (!uNameExists) {\n          API.createUser(this.state).then(response => console.log(response)).catch(error => console.log(error));\n        }\n      }).catch(err => console.log(err)); // .catch(response=>response.JSON({Error: \"This username is already taken.\"}));\n      // db.Users.findOne({username:this.state.username}).then(name=>{\n      //     if(name === 0) {\n      //         db.User.create({username: this.state.username, password: this.state.password});\n      //         console.log(\"Username: \"+this.state.username+\" Password: \"+this.state.password);\n      //     } else {\n      //         this.setState({username:\"\", password:\"\"});\n      //         // alert(\"This username is already taken. Please choose a different one.\");\n      //         console.log(\"Username: \"+this.state.username+\" Password: \"+this.state.password);\n      //         //res.JSON({Error: \"This username is already taken\"});\n      //     }\n      // });\n      // console.log(\"New user created\");\n    };\n  }\n\n  componentDidMount() {\n    console.log('yo');\n    API.getUsers().then(res => console.log(res));\n    API.getPosts().then(res => console.log(res));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"signupForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"signupUName\",\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"signupPword\",\n      type: \"text\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(TopInterests, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(TopInterests, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(TopInterests, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(OtherInterests, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(SignUpBtn, {\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["c:\\Users\\rdoug\\Planit\\client\\src\\pages\\signup.js"],"names":["React","Component","SignUpBtn","TopInterests","OtherInterests","API","SignUp","state","username","password","handleInputChange","event","name","target","value","setState","console","log","handleFormSubmit","preventDefault","uNameExists","getUsers","then","res","data","i","length","alert","createUser","response","catch","error","err","componentDidMount","getPosts","render"],"mappings":"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","sourcesContent":["//sign up page\r\nimport React, {Component} from \"react\";\r\nimport SignUpBtn from \"../components/SignupBtn\";\r\nimport TopInterests from \"../components/TopInterests\";\r\nimport OtherInterests from \"../components/OtherInterests\";\r\nimport API from \"../utils/API\";\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n    componentDidMount() {\r\n        console.log('yo');\r\n        API.getUsers().then((res) => console.log(res));\r\n        API.getPosts().then((res) => console.log(res));\r\n}\r\n\r\n    handleInputChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        console.log(this.state);\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        let uNameExists = false;\r\n        // function checking if username exists already - if does prompts for new entry, if not creates new user\r\n        API.getUsers()\r\n            .then(res => {\r\n                console.log(uNameExists);\r\n                console.log(res.data[0].username);\r\n                for (var i=0; i<res.data.length;i++) {\r\n                    if (res.data[i].username === this.state.username) {\r\n                        return uNameExists = true;\r\n                    }\r\n                }\r\n            })\r\n            .then(() => {\r\n                uNameExists ? console.log(\"this username already exists\") : console.log(\"create new user\");\r\n                uNameExists ? alert(\"This username already exists. Please choose a different one.\") : alert(\"Welcome, \"+this.state.username+\"!\");\r\n                if (!uNameExists) {\r\n                API.createUser(this.state).then(response => console.log(response)).catch(error => console.log(error));\r\n                }\r\n            })\r\n            .catch(err=>console.log(err));\r\n            // .catch(response=>response.JSON({Error: \"This username is already taken.\"}));\r\n        // db.Users.findOne({username:this.state.username}).then(name=>{\r\n        //     if(name === 0) {\r\n        //         db.User.create({username: this.state.username, password: this.state.password});\r\n        //         console.log(\"Username: \"+this.state.username+\" Password: \"+this.state.password);\r\n        //     } else {\r\n        //         this.setState({username:\"\", password:\"\"});\r\n        //         // alert(\"This username is already taken. Please choose a different one.\");\r\n        //         console.log(\"Username: \"+this.state.username+\" Password: \"+this.state.password);\r\n        //         //res.JSON({Error: \"This username is already taken\"});\r\n        //     }\r\n        // });\r\n        // console.log(\"New user created\");\r\n    };\r\n\r\n    render() {\r\n    return (\r\n        <div>\r\n            <form id=\"signupForm\">\r\n                <input id=\"signupUName\" type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.handleInputChange} />\r\n                <input id=\"signupPword\" type=\"text\" name=\"password\" placeholder=\"Password\" onChange={this.handleInputChange} />\r\n                <TopInterests />\r\n                <TopInterests />\r\n                <TopInterests />\r\n                <OtherInterests />\r\n                <SignUpBtn onClick={this.handleFormSubmit}/>\r\n            </form>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}